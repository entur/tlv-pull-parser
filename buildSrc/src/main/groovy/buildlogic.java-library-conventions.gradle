/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id 'buildlogic.java-common-conventions'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {

    publications {
        maven(MavenPublication) {
            from components.java

            groupId = "$group"
            artifactId = project.name
            version = project.hasProperty('version') ? "$version" : "0.0.0-SNAPSHOT"

            if(project.ext.has('artifactId')) {
                System.out.println("Publishing " + project.name + " with artifact-id " + project.ext.artifactId)
            }

            pom {
                name = "${!project.ext.has('artifactId') ? project.name : project.ext.artifactId}"
                url = 'https://github.com/entur/tlv-pull-parser'
                packaging = 'jar'
                inceptionYear = '2025'
                description = project.name

                licenses {
                    license {
                        name = 'European Union Public Licence v1.2'
                        url = 'https://www.eupl.eu/'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = "skjolber"
                        name = "Thomas Skj√∏lberg"
                        email = "thomas.rorvik.skjolberg@entur.org"
                    }
                }
                scm {
                    url = 'https://github.com/entur/tlv-pull-parser'
                    connection = 'git@github.com:entur/tlv-pull-parser.git'
                }
            }
        }
    }

    if(project.hasProperty("signing.gnupg.keyName")) {
        signing {
            useGpgCmd()

            // set
            // signing.gnupg.keyName=xxx
            // signing.gnupg.passphrase=yyy
            // via command line or global gradle properties
            // then run
            // w17 build publishToSonatype --info --stacktrace

            sign(publishing.publications)
        }
    }

}